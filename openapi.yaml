openapi: 3.1.0
info:
  title: Todo List API
  description: API documentation for the Todo List project
  version: 1.0.0
servers:
  - url: http://localhost:5506/api/v1
    description: Local server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
    Task:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        user:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
  /auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  token:
                    type: string
  /auth/delete:
    delete:
      summary: Delete user
      security:
        - bearerAuth: []
      responses:
        '204':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  id:
                    type: string
  /tasks/all:
    get:
      summary: Get all tasks (paginated)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false
        - in: query
          name: page
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Tasks fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  page:
                    type: integer
                  limit:
                    type: integer
                  total:
                    type: integer
  /tasks/create:
    post:
      summary: Create a task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
  /tasks/update/{id}:
    patch:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  updatedTask:
                    $ref: '#/components/schemas/Task'
  /tasks/delete/{id}:
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
